services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: >
      bash -c "until pg_isready -U postgres; do echo 'Waiting for PostgreSQL...'; sleep 1; done;
      psql -U postgres -c 'CREATE ROLE myuser WITH LOGIN PASSWORD '\''mypassword'\'';' &&
      psql -U postgres -c 'CREATE DATABASE messages_db WITH OWNER myuser;' &&
      psql -U postgres -d messages_db -c 'CREATE TABLE IF NOT EXISTS messages (
        id SERIAL PRIMARY KEY,
        content TEXT NOT NULL,
        processed BOOLEAN NOT NULL DEFAULT FALSE,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      );' &&
      exec postgres"

  kafka:
    image: wurstmeister/kafka:latest
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  app:
    build: .
    environment:
      POSTGRES_URL: postgres://myuser:mypassword@postgres:5432/messages_db
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: your_topic
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - kafka

volumes:
  postgres_data:
